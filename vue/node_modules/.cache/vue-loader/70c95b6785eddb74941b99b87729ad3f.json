{"remainingRequest":"E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--1-0!E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js??vue-loader-options!E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\src\\views\\Notice.vue?vue&type=template&id=5cbb04dc&","dependencies":[{"path":"E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\src\\views\\Notice.vue","mtime":1651914491827},{"path":"E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\learnJava\\程序员青戈的源码\\pure-design\\vue\\node_modules\\_vue-loader@15.9.8@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}